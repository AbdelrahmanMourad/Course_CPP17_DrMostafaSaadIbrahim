/*
=================================================================================================
STL Practice #1
=================================================================================================
    ● This struct will receive stream of numbers, each time return sum of last k numbers
    ● E.g. if k = 4
    ● Stream: 1 2 3 4 5 6 7 8 9
    ● Returns: 1, 1+2, 1+2+3, 1+2+3+4, 2+3+4+5, 3+4+5+6, ..
        ○ That is for 6 ⇒ 18
    ● Don’t store more than ~ K numbers


=================================================================================================
*/

/*  =================================================================================================
                                    Included Libraries
    =================================================================================================  */
#include <iostream>

/*  =================================================================================================
                                    Declarations/ Prototypes
    =================================================================================================  */
struct last_k_numbers_sum_stream
{
    int k;
    last_k_numbers_sum_stream(int k_arg) : k{k_arg} {}
    int next(int new_num)
    {
        // compute and return sum of last K numbers sent so far.
        return 0;
    }
};

/*  =================================================================================================
                                    Entry Point - Main Function
    =================================================================================================  */
int main()
{
    last_k_numbers_sum_stream processor(4);

    int num;

    while (std::cin >> num)
    {
        std::cout << processor.next(num) << "\n";
    }

    return 0;
}
/*  =================================================================================================
                                    Implementations
    =================================================================================================  */
